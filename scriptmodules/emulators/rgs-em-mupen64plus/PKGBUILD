# Maintainer: V0rt3x667 <al-g0l@outlook.com>
pkgname=rgs-em-mupen64plus
pkgver=2.5.9.r104.91b90941
pkgrel=1
pkgdesc="Nintendo 64 Emulator"
arch=('x86_64')
url="https://mupen64plus.org"
license=('GPL2')
depends=(
  'boost-libs'
  'freetype2'
  'glew'
  'libsamplerate'
  'minizip'
  'sdl2'
  'speexdsp'
)
makedepends=(
  'cmake'
  'git'
  'mesa'
  'nasm'
)
source=(
  "git+https://github.com/mupen64plus/mupen64plus-audio-sdl"
  "git+https://github.com/mupen64plus/mupen64plus-core"
  "git+https://github.com/mupen64plus/mupen64plus-input-sdl"
  "git+https://github.com/mupen64plus/mupen64plus-rsp-cxd4"
  "git+https://github.com/mupen64plus/mupen64plus-rsp-hle"
  "git+https://github.com/mupen64plus/mupen64plus-rsp-z64"
  "git+https://github.com/mupen64plus/mupen64plus-ui-console"
  "git+https://github.com/mupen64plus/mupen64plus-video-arachnoid"
  "git+https://github.com/mupen64plus/mupen64plus-video-glide64mk2"
  "git+https://github.com/mupen64plus/mupen64plus-video-rice"
  "git+https://github.com/mupen64plus/mupen64plus-video-z64"
  "video-angrylion::git+https://github.com/ata4/angrylion-rdp-plus.git"
  "video-gliden64::git+https://github.com/gonetz/GLideN64.git"
)
sha256sums=(
  'SKIP'
  'SKIP'
  'SKIP'
  'SKIP'
  'SKIP'
  'SKIP'
  'SKIP'
  'SKIP'
  'SKIP'
  'SKIP'
  'SKIP'
  'SKIP'
  'SKIP'
)
_m64p_components=(
  'audio-sdl' 
  'core' 
  'input-sdl' 
  'rsp-cxd4' 
  'rsp-hle' 
  'rsp-z64' 
  'ui-console'
  'video-arachnoid' 
  'video-glide64mk2' 
  'video-rice' 
  'video-z64' 
)
_3p_components=(
  'video-angrylion'
  'video-gliden64'
)
_installdir="/opt/archrgs/emulators/$pkgname"
_parameters=("PREFIX=${_installdir%/}" "COREDIR=${_installdir%/}/lib" "PLUGINDIR=${_installdir%/}/lib/mupen64plus" "OSD=1" "PIE=1" "SSE=SSE2")

pkgver() {
  cd "$srcdir/mupen64plus-core"

  printf "%s" "$(git describe --long | sed 's/\([^-]*-\)g/r\1/;s/-/./g')"
}

prepare() {
  cd "$srcdir"

  for component in "${_3p_components[@]}"
  do
    cd "$srcdir/${component}"
    if [[ -d build ]]; then
      rm -rf build
    fi
    mkdir build
  done

  config_version=$(grep -oP '(?<=CONFIG_VERSION_CURRENT ).+?(?=U)' "$srcdir/video-gliden64/src/Config.h")
  echo "${config_version}" > "$srcdir/video-gliden64/GLideN64_config_version.ini"
}

build() {
  cd "$srcdir"

  for component in "${_m64p_components[@]}"
  do
    cd "$srcdir"
    printf '%s\n' "  -> Building component 'mupen64plus-${component}'..."
    make -C "mupen64plus-${component}/projects/unix" all "${_parameters[@]}" OPTFLAGS="${CFLAGS} -O3 -flto"
  done

  ##Build Angrylion Plugin
  cd "$srcdir/video-angrylion/build"

  cmake .. \
    -DCMAKE_INSTALL_PREFIX="${_installdir%/}"
  make

  ##Build GLideN64 Plugin
  cd "$srcdir/video-gliden64/build"

  "$srcdir/video-gliden64/src/getRevision.sh"

  cmake ../src \
    -DCMAKE_INSTALL_PREFIX="${_installdir%/}" \
    -DMUPENPLUSAPI=ON \
    -DVEC4_OPT=ON \
    -DX86_OPT=ON \
    -DUSE_SYSTEM_LIBS=ON \
    -DCRC_OPT=ON \
    -Wno-dev \
    -DCMAKE_CXX_FLAGS="${CXXFLAGS} -fpermissive"
  make
}

package() {
  cd "$srcdir"

  for component in ${_m64p_components[@]}
  do
    printf '%s\n' "  -> Installing component '${component}'..."
    make -C "mupen64plus-${component}/projects/unix" DESTDIR="${pkgdir}" "${_parameters[@]}" OPTFLAGS="${CFLAGS} -O3 -flto" install
  done

  ##Install Angrylion Plugin
  cd "$srcdir/video-angrylion/build"

  install -Dm644 ./mupen64plus-video-angrylion-plus.so -t "${pkgdir}${_installdir%/}/lib/mupen64plus"

  ##Install GLideN64 Plugin
  cd "$srcdir/video-gliden64/build/plugin/Release"

  install -Dm644 ./mupen64plus-video-GLideN64.so -t "${pkgdir}${_installdir%/}/lib/mupen64plus"
  install -Dm755 ../../../ini/{GLideN64.ini,GLideN64.custom.ini} -t "${pkgdir}${_installdir%/}/share/mupen64plus"
  install -Dm755 ../../../GLideN64_config_version.ini -t "${pkgdir}${_installdir%/}/share/mupen64plus"
}

